call, apply and bind 
 
bind: 
	The bind() method creates a new function that, when called, has its this keyword set to the provided value. 
	Ex: var obj = {
				firstName: 'Keyur',
				logName: function () { returns this.firstName; }
		}
		var logName = function() { console.log(this.logName()) }
		var logIt = logName.bind(obj);
		logIt();
call: 
	The call() method calls a function with a given this value and arguments provided individually. It executes the function it was called upon right away.
	The call() method does not make a copy of the function it is being called on.
apply : 
	call() and apply() serve the exact same purpose. The only difference between how they work is that call() expects all parameters to be passed in individually, whereas apply() expects an array of all  of our parameters.
	Ex: 
		var pokemon = {
			firstname: 'Pika',
			lastname: 'Chu ',
			getPokeName: function() {
				var fullname = this.firstname + ' ' + this.lastname;
				return fullname;
			}
		};
 
		var pokemonName = function(snack, hobby) {
			console.log(this.getPokeName() + ' loves ' + snack + ' and ' + hobby);
		};
 
		pokemonName.call(pokemon,'sushi', 'algorithms'); // Pika Chu  loves sushi and algorithms
		pokemonName.apply(pokemon,['sushi', 'algorithms']); // Pika Chu  loves sushi and algorithms